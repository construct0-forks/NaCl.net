using System;
using NUnit.Framework;
using NaCl.Internal;

namespace NaCl.Tests
{
    [TestFixture]
    public class Salsa20
    {
        [Test]
        public void HSalsa20Test1()
        {
            byte[] shared = new byte[32] { 0x4a, 0x5d, 0x9d, 0x5b, 0xa4, 0xce, 0x2d,
                0xe1, 0x72, 0x8e, 0x3b, 0xf4, 0x80, 0x35,
                0x0f, 0x25, 0xe0, 0x7e, 0x21, 0xc9, 0x47,
                0xd1, 0x9e, 0x33, 0x76, 0xf0, 0x9b, 0x3c,
                0x1e, 0x16, 0x17, 0x42 };
            byte[] zero = new byte[32];
            byte[] c = new byte[16] { 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x20, 0x33,
                0x32, 0x2d, 0x62, 0x79, 0x74, 0x65, 0x20, 0x6b };
            byte[] firstkey = new byte[32];
            
            HSalsa20.Transform(firstkey, zero, shared, c);
            
            Assert.AreEqual(new byte[]
            {
                0x1b,0x27,0x55,0x64,0x73,0xe9,0x85,0xd4
                ,0x62,0xcd,0x51,0x19,0x7a,0x9a,0x46,0xc7
                ,0x60,0x09,0x54,0x9e,0xac,0x64,0x74,0xf2
                ,0x06,0xc4,0xee,0x08,0x44,0xf6,0x83,0x89
            }, firstkey);
        }

        [Test]
        public void StreamSalsaTest()
        {
            byte[] secondkey = new byte[32] {
                0xdc, 0x90, 0x8d, 0xda, 0x0b, 0x93, 0x44,
                0xa9, 0x53, 0x62, 0x9b, 0x73, 0x38, 0x20,
                0x77, 0x88, 0x80, 0xf3, 0xce, 0xb4, 0x21,
                0xbb, 0x61, 0xb9, 0x1c, 0xbd, 0x4c, 0x3e,
                0x66, 0x25, 0x6c, 0xe4
            };
            
            byte[] noncesuffix = new byte[8] {
                0x82, 0x19, 0xe0, 0x03, 0x6b, 0x7a, 0x0b, 0x37
            };
            
            byte[] output = new byte[4000];
            
            StreamSalsa20.Transform(output, noncesuffix, secondkey);
            StreamSalsa20Xor.Transform(new Span<byte>(output, 0, 4000),
                new ReadOnlySpan<byte>(output, 0, 4000), noncesuffix, secondkey, 0);

            for (int i = 0; i < 4000; i++)
            {
                Assert.AreEqual(0, output[i]);
            }
            
            




        }
    }
}